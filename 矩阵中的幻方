class Solution {
public:
    int numMagicSquaresInside(vector<vector<int>> grid) {
        int sum=0;
        if(grid.size()<3)
        {
            return sum;
        }
        else
        for(int i=1;i<grid.size()-1;i++)
            for(int j=1;j<grid[0].size()-1;)
            {
                if(grid[i][j]==5&&islawfulgrid(grid,i,j))
                {
                    sum++;
                    j=j+2;
                }
                else
                j++;
            }
        return sum;
    }
    private: bool islawfulgrid(vector<vector<int>> grid,int x,int y)
    {
    int num1=grid[x-1][y-1];
    int num2=grid[x-1][y];
    int num3=grid[x-1][y+1];
    int num4=grid[x][y-1];
    int num5=grid[x][y+1];
    int num6=grid[x+1][y-1];
    int num7=grid[x+1][y];
    int num8=grid[x+1][y+1];
    if(num1%5!=0 && num5%5!=0 && num7%5!=0 && num3%5!=0 &&num1!=num2)
        if(num1+num8==10 && num2+num7==10 && num3+num6==10 && num4+num5==10)
            return true;
        else
            return false; 
    else
        return false;
    }
};
